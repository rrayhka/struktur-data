# -*- coding: utf-8 -*-
"""220411100158_Modul6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oE3fFWzrjjyywRtm-FjqQDoE6PSlf9AE

# Nomor 1
"""

def unOrderedSequentialSearch(lists, key):
    iteration = 0
    found = False
    n = len(lists)
    atIndex = []

    while iteration < n or not found:
        if lists[iteration] == key:
            atIndex.append(iteration)
            found = True
        iteration += 1
        if iteration == n:
            break

    if found:
        print("Data ditemukan di indeks:", atIndex)
        print("Jumlah iterasi:", iteration)
    else:
        print("Data tidak ada")
        print("Jumlah iterasi:", iteration)

# Pemanggilan Fungsi
lists = [1, 5, 9, 8, 1, 5, 10, 26, 5, 12]
for _ in range(3):
    key = int(input("Data yang dicari: "))
    unOrderedSequentialSearch(lists, key)
    print()

"""# Nomor 2"""

def orderedSequentialSearch(lists,key):
    found = False
    iteration = 0
    stop = False
    atIndex = []
    n = len(lists)

    while not stop:
        if iteration == n or lists[iteration] > key:
            stop = True
        iteration += 1
        if lists[iteration] == key:
            atIndex.append(iteration)
            found = True

    if not found:
        print('Data tidak ada')
        print("Jumlah iterasi:", iteration)
    else:
        print("Data ditemukan di indeks:", atIndex)
        print("Jumlah iterasi:", iteration)

# Pemanggilan Fungsi
lists = [1, 1, 5, 5, 5, 8, 9, 10, 12, 16]
for _ in range(3):
    key = int(input("Data yang dicari: "))
    orderedSequentialSearch(lists, key)
    print()

"""# Nomor 3"""

def binarySearch(listdata, data):
    awal = 0
    akhir = len(listdata) - 1
    posisi = []
    iterasi = 0

    while awal <= akhir:
        midpoint = (awal + akhir)//2
        if listdata[midpoint]==data:
            posisi.append(midpoint)
            if data < listdata[midpoint+1]:
                akhir = midpoint - 1
            else:
              awal=midpoint + 1

        else:
            if data < listdata[midpoint]:
                akhir = midpoint - 1
            else:
                awal = midpoint + 1
        iterasi += 1

    if len(posisi)==0:
        return 'Data tidak ada', iterasi

    return posisi, iterasi

# Pemanggilan fungsi
lists = [1,1,5,5,5,8,9,10,12,26]
for _ in range(3):
  data = int(input("data yang dicari: "))
  [hasil, iterasi] = binarySearch(lists, data)
  print('Posisi data = ',hasil)
  print('jumlah iterasi = ',iterasi)
  print()