# -*- coding: utf-8 -*-
"""220411100158_Modul7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rBRTTg1qDaSqAg5_0-rm4efUzCYIjLCW
"""

def remainderFunction(data, data_table):
    return data % data_table

def createHashTable(n):
    return [[None] for i in range(n)]

def chaining(a, hash_table):
    for item in a:
        hash_value = remainderFunction(item, len(hash_table))
        if hash_table[hash_value] == [None]:
            hash_table[hash_value] = [item]
        else:
            hash_table[hash_value].append(item)

def searchHash(data, table):
    result = remainderFunction(data, len(table))
    if table[result] != None:
        nilai = False
        for i in range(len(table[result])):
            if data == table[result][i]:
                print(f"Data berada di slot ke {result} dan di indeks {i}")
                nilai = True
        if nilai == False:
            print("False")
    else:
        print("False")

# Nomor 1
slot = remainderFunction(55, 10)
print(slot)

# Nomor 2
hashTable = createHashTable(11)
print(hashTable)

# Nomor 3
a = [54, 26, 93, 17, 77, 31, 44, 55, 20]
chaining(a, hashTable)
print(hashTable)

# Nomor 4
for _ in range(5):
  data = int(input("data yang akan di cari: "))
  searchHash(data, hashTable)
  print()